name: Detect Trust Center Platforms

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'constants/trustCenterRegistry/**.js'
      - 'scripts/detect-platform.js'
  workflow_dispatch: {}

permissions:
  contents: read
  pull-requests: write

jobs:
  detect:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run detector
        id: detect
        run: |
          node scripts/detect-platform.js > detection.md
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          cat detection.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment results
        uses: actions/github-script@v7
        with:
          script: |
            const body = `ðŸ¤– Trust Center Platform Detection\n\n${process.env.SUMMARY}`;
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
            });
            const marker = '<!-- platform-detect -->';
            const existing = comments.find(c => c.body && c.body.includes(marker));
            const finalBody = `${marker}\n${body}`;
            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body: finalBody,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: finalBody,
              });
            }
        env:
          SUMMARY: ${{ steps.detect.outputs.summary }}


